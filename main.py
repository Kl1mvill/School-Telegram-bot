from telebot import types, TeleBot
from datetime import timedelta, datetime
from locale import setlocale, LC_ALL
import text
import json

setlocale(category=LC_ALL, locale="Russian")  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã datetime


API_TOKEN = "<api_token>"
bot = TeleBot(API_TOKEN)

with open("data.json", encoding="utf-8") as file:
	registered = json.load(file)
print(registered)


def write_file_registered():
	with open("data.json", "w", encoding="utf-8") as file:
		json.dump(registered, file, ensure_ascii=False)


@bot.message_handler(commands=['start'])
def start(message):
	"""–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫."""

	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

	btn_today = types.KeyboardButton("üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
	btn_help = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
	btn_calls = types.KeyboardButton("üîî –ó–≤–æ–Ω–∫–∏")

	markup.row(btn_today)
	markup.add(btn_calls, btn_help)

	bot.send_message(message.chat.id, text.start_text_message, reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
	today_date = datetime.today()
	tomorrow_date = today_date + timedelta(days=1)
	yesterday_date = today_date - timedelta(days=1)

	user_class = registered[str(callback.message.chat.id)]

	user_schedules = text.schedules[user_class]

	if callback.data == "tomorrow":
		beautiful_date = tomorrow_date.strftime('%d %b. %Y –≥.')  # –í—ã–≤–æ–¥ –¥–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		schedule = user_schedules[tomorrow_date.weekday()]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
		markup = types.InlineKeyboardMarkup()

		btn_today = types.InlineKeyboardButton("üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
		markup.add(btn_today)

		text_message = f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {beautiful_date}*\n\n{schedule}\n\nüëá –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."

		bot.send_message(callback.message.chat.id, text_message, parse_mode='Markdown', reply_markup=markup)


	elif callback.data == "yesterday":
		beautiful_date = yesterday_date.strftime('%d %b. %Y –≥.')  # –í—ã–≤–æ–¥ –¥–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		schedule = user_schedules[yesterday_date.weekday()]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
		markup = types.InlineKeyboardMarkup()

		btn_today = types.InlineKeyboardButton("üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
		markup.add(btn_today)

		text_message = f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {beautiful_date}*\n\n{schedule}\n\nüëá –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."

		bot.send_message(callback.message.chat.id, text_message, parse_mode='Markdown', reply_markup=markup)


	elif callback.data == "today":
		beautiful_date = today_date.strftime('%d %b. %Y –≥.')  # –í—ã–≤–æ–¥ –¥–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		schedule = user_schedules[today_date.weekday()]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
		markup = types.InlineKeyboardMarkup()

		btn_tomorrow = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data="tomorrow")
		btn_yesterday = types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="yesterday")

		markup.row(btn_yesterday, btn_tomorrow)

		text_message = f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {beautiful_date}*\n\n{schedule}\n\nüëá –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞."

		bot.send_message(callback.message.chat.id, text_message, parse_mode='Markdown', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def text_messages(message):
	today_date = datetime.today()
	tomorrow_date = today_date + timedelta(days=1)

	user_input = message.text.lower()
	user_schedules = None

	if str(message.chat.id) in registered:
		user_class = registered[str(message.chat.id)]

		user_schedules = text.schedules[user_class]

		print(f"{message.chat.id}({user_class}) - {user_input}")


	elif user_input in text.schedules.keys():
		registered[message.chat.id] = user_input
		bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!")

		user_class = user_input
		user_schedules = text.schedules[user_class]

		print(f"{message.chat.id}({user_class}) - {user_input}")

	if str(message.chat.id) not in registered:
		bot.send_message(message.chat.id,
						 "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —É–∫–∞–∑–∞–≤ –Ω–æ–º–µ—Ä –∏ –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞. \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 9–ì, 11–∞, 8–í.",
						 parse_mode='Markdown')

	elif user_input in ("üìö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "/today", "today", "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"):
		"–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å"

		beautiful_date = today_date.strftime('%d %b. %Y –≥.')  # –í—ã–≤–æ–¥ –¥–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		schedule = user_schedules[today_date.weekday()]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
		markup = types.InlineKeyboardMarkup()

		btn_tomorrow = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data="tomorrow")
		btn_yesterday = types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="yesterday")

		markup.row(btn_yesterday, btn_tomorrow)

		text_message = f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {beautiful_date}*\n\n{schedule}\n\nüëá –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞."

		bot.send_message(message.chat.id, text_message, parse_mode='Markdown', reply_markup=markup)

	elif user_input in ("/tomorrow", "–∑–∞–≤—Ç—Ä–∞", "tomorrow"):
		"–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å"

		beautiful_date = tomorrow_date.strftime('%d %b. %Y –≥.')  # –í—ã–≤–æ–¥ –¥–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		schedule = user_schedules[tomorrow_date.weekday()]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
		markup = types.InlineKeyboardMarkup()

		btn_today = types.InlineKeyboardButton("üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")

		markup.add(btn_today)

		text_message = f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {beautiful_date}*\n\n{schedule}\n\nüëá –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."

		bot.send_message(message.chat.id, text_message, parse_mode='Markdown', reply_markup=markup)

	elif user_input in ("‚ùì –ø–æ–º–æ—â—å", "–ø–æ–º–æ—â—å", "/help", "help"):
		"–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏"

		bot.send_message(message.chat.id, text.help_text_message, parse_mode='Markdown')

	elif user_input in ("/calls", "calls", "–∑–≤–æ–Ω–∫–∏", "–∑–≤–æ–Ω–æ–∫", "üîî –∑–≤–æ–Ω–∫–∏"):
		"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"

		markup = types.InlineKeyboardMarkup()
		btn_today = types.InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
		markup.add(btn_today)

		bot.send_message(message.chat.id, text.calls_text_message, parse_mode='Markdown', reply_markup=markup)

	elif user_input in ("/teachers", "teachers", "—É—á–∏—Ç–µ–ª—è"):
		bot.send_message(message.chat.id, text.teachers_text_message, parse_mode='Markdown')

	elif user_input in ("/groups", "groups", "–≥—Ä—É–ø–ø—ã"):
		"""–°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤ –∏ –∫–∞–±–∏–Ω–µ—Ç –∏—Ö –∫–ª–∞—Å—Å–Ω–æ–≥–æ —Ä—É–∫–æ–≤–æ–∏—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –≤ –∫–∞–∫–æ–º –∫–ª–∞—Å—Å–µ –æ–Ω–∏ —Å–µ–π—á–∞—Å"""
		bot.send_message(message.chat.id,
						 "–£ –º–µ–Ω—è –Ω–µ—Ç —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö( \n–ï—Å–ª–∏ –≤—ã –∏–º–∏ –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∫–∏–Ω—Ç–µ –∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ( @Klimvill ), –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")

	elif user_input in ("/person", "person"):
		"–†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —à–∫–æ–ª—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, —É—á–∏—Ç–µ–ª—è, —É—á–µ–Ω–∏–∫–∞"
		bot.send_message(message.chat.id,
						 "–£ –º–µ–Ω—è –Ω–µ—Ç —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö( \n–ï—Å–ª–∏ –≤—ã –∏–º–∏ –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∫–∏–Ω—Ç–µ –∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ( @Klimvill ), –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")

	elif user_input in ("–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–ø–Ω", "monday", "/monday", "mon"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫*\n\n{user_schedules[0]}",
						 parse_mode='Markdown')

	elif user_input in ("–≤—Ç–æ—Ä–Ω–∏–∫", "–≤—Ç", "tuesday", "/tuesday", "tue"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫*\n\n{user_schedules[1]}",
						 parse_mode='Markdown')

	elif user_input in ("—Å—Ä–µ–¥–∞", "—Å—Ä", "wednesday", "/wednesday", "wed"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Å—Ä–µ–¥—É*\n\n{user_schedules[2]}",
						 parse_mode='Markdown')

	elif user_input in ("—á–µ—Ç–≤–µ—Ä–≥", "—á—Ç", "thursday", "/thursday", "thu"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥*\n\n{user_schedules[3]}",
						 parse_mode='Markdown')

	elif user_input in ("–ø—è—Ç–Ω–∏—Ü–∞", "–ø—Ç", "friday", "/friday", "fri"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É*\n\n{user_schedules[4]}",
						 parse_mode='Markdown')

	elif user_input in ("—Å—É–±–±–æ—Ç–∞", "—Å–±", "saturday", "/saturday", "sat"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Å—É–±–±–æ—Ç—É*\n\n{user_schedules[5]}",
						 parse_mode='Markdown')

	elif user_input in ("–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–≤—Å", "sunday", "/sunday", "sun"):
		bot.send_message(message.chat.id, f"üìÜ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ*\n\n{user_schedules[6]}",
						 parse_mode='Markdown')


	elif user_input in ("/links", "links", "—Å—Å—ã–ª–∫–∏"):
		bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∏ –Ω–∞ —à–∫–æ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã")

	elif user_input in ("/register", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "register"):
		del registered[str(message.chat.id)]

	elif user_input in ("/add_class_chat", "add_class_chat", "–¥–æ–±–∞–≤–∏—Ç—å"):
		"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ, –≤ —á–∞—Ç –∫–ª–∞—Å—Å–∞"
		...

	elif user_input in "/save_data" and message.chat.id == 5980441769:
		write_file_registered()
		bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

	else:
		bot.send_message(message.chat.id, " –ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø–æ—á–∏—Ç–∞–π—Ç–µ /help.")


bot.polling()
